[33mcommit f7b9abcb8a81a5b13e323fb27eda02cf327760f7[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: GScabuzzi <gustavo-gsg@hotmail.com>
Date:   Wed Sep 1 22:18:37 2021 -0300

    AdiÃ§ao dos exercicios de programaÃ§ao Sequencial

[1mdiff --git a/src/ExerCondicionais/Exer03.java b/src/ExerCondicionais/Exer03.java[m
[1mindex d67d8db..92e0474 100644[m
[1m--- a/src/ExerCondicionais/Exer03.java[m
[1m+++ b/src/ExerCondicionais/Exer03.java[m
[36m@@ -32,6 +32,8 @@[m [mpublic class Exer03 {[m
 		}else {[m
 			System.out.println("Sua idade é muito avançada!");[m
 		}[m
[32m+[m[41m		[m
[32m+[m		[32mler.close();[m
 [m
 	}[m
 [m
[1mdiff --git a/src/ExerCondicionais/Exer04.java b/src/ExerCondicionais/Exer04.java[m
[1mindex 3f7db09..f77d3a4 100644[m
[1m--- a/src/ExerCondicionais/Exer04.java[m
[1m+++ b/src/ExerCondicionais/Exer04.java[m
[36m@@ -24,6 +24,8 @@[m [mpublic class Exer04 {[m
 			System.out.println("Esse numero é impar!");[m
 			System.out.println("O seu quadrado é: " + Math.pow(num, 2.0));[m
 		}[m
[32m+[m[41m		[m
[32m+[m		[32mler.close();[m
 [m
 	}[m
 [m
[1mdiff --git a/src/ExerProgSequencial/Exer01.java b/src/ExerProgSequencial/Exer01.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3118f84[m
[1m--- /dev/null[m
[1m+++ b/src/ExerProgSequencial/Exer01.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage ExerProgSequencial;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer01 {[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m	[32m//1. Faça um sistema que leia a idade de uma pessoa expressa em anos, meses e[m
[32m+[m	[32m//dias e mostre-a expressa apenas em dias.[m[41m		[m
[32m+[m[41m			[m
[32m+[m			[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m			[m
[32m+[m			[32mint anos, meses, dias, idadeDias;[m
[32m+[m[41m			[m
[32m+[m			[32mSystem.out.print("Digite sua idade em anos, meses e dias! \nAnos: " );[m
[32m+[m			[32manos = ler.nextInt();[m
[32m+[m[41m			[m
[32m+[m			[32mSystem.out.print("Meses: ");[m
[32m+[m			[32mmeses = ler.nextInt();[m
[32m+[m[41m				[m
[32m+[m			[32mSystem.out.print("Dias: ");[m
[32m+[m			[32mdias = ler.nextInt();[m
[32m+[m[41m			[m
[32m+[m			[32midadeDias = (anos*365) + (meses*30) + dias;[m
[32m+[m			[32mSystem.out.print("A sua idade em quantidade de dias é igual a: " +idadeDias+ " dias");[m
[32m+[m[41m			[m
[32m+[m			[32mler.close();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerProgSequencial/Exer02.java b/src/ExerProgSequencial/Exer02.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2a2c5be[m
[1m--- /dev/null[m
[1m+++ b/src/ExerProgSequencial/Exer02.java[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mpackage ExerProgSequencial;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer02 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32m//2. Faça um sistema que leia a idade de uma pessoa expressa em dias e mostre-a[m
[32m+[m		[32m//expressa em anos, meses e dias.[m
[32m+[m[41m				[m
[32m+[m				[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m				[m
[32m+[m				[32mint anos, meses, dias, idadeDias;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Digite a idade em dias: ");[m
[32m+[m				[32midadeDias = ler.nextInt();[m
[32m+[m[41m				[m
[32m+[m				[32manos = idadeDias / 365;[m
[32m+[m				[32mmeses = (idadeDias % 365) / 30;[m
[32m+[m				[32mdias = (idadeDias % 365) % 30;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.println("Sua idade é: " +anos+ " anos, " +meses+ " meses, " +dias+ " dias");[m
[32m+[m[41m				[m
[32m+[m				[32mler.close();[m
[32m+[m[41m				[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerProgSequencial/Exer03.java b/src/ExerProgSequencial/Exer03.java[m
[1mnew file mode 100644[m
[1mindex 0000000..07cf1b2[m
[1m--- /dev/null[m
[1m+++ b/src/ExerProgSequencial/Exer03.java[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32mpackage ExerProgSequencial;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer03 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32m//3. Faça um sistema que leia o tempo de duração de um evento em uma fábrica[m
[32m+[m		[32m//expressa em segundos e mostre-o expresso em horas, minutos e segundos.[m
[32m+[m[41m				[m
[32m+[m				[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m				[m
[32m+[m				[32mint horas, minutos, segundos;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.println("Digite a duraçao do evento em segundos: ");[m
[32m+[m				[32msegundos = ler.nextInt();[m
[32m+[m[41m				[m
[32m+[m				[32mhoras = segundos / 3600;[m
[32m+[m				[32mminutos = (segundos % 3600) / 60;[m
[32m+[m				[32msegundos = (segundos % 3600) % 60;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("O evento teve: "+[m
[32m+[m									[32m"\nHoras: " +horas+ "Hrs."+[m
[32m+[m									[32m"\nMinutos: " +minutos+ "Mins."+[m
[32m+[m									[32m"\nSegundos: " +segundos+ "Segs.");[m
[32m+[m[41m				[m
[32m+[m
[32m+[m				[32mler.close();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerProgSequencial/Exer04.java b/src/ExerProgSequencial/Exer04.java[m
[1mnew file mode 100644[m
[1mindex 0000000..aaf8d77[m
[1m--- /dev/null[m
[1m+++ b/src/ExerProgSequencial/Exer04.java[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32mpackage ExerProgSequencial;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer04 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m
[32m+[m		[32m//4. Escreva um sistema que leia três números inteiros e positivos (A, B, C) e[m
[32m+[m		[32m//calcule a seguinte expressão:[m
[32m+[m[41m				[m
[32m+[m				[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m				[m
[32m+[m				[32mdouble a, b, c, d, r, s;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Escreva o valor de A: ");[m
[32m+[m				[32ma = ler.nextInt();[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Escreva o valor de B: ");[m
[32m+[m				[32mb = ler.nextInt();[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Escreva o valor de C: ");[m
[32m+[m				[32mc = ler.nextInt();[m
[32m+[m[41m				[m
[32m+[m				[32mr = Math.pow((a+b), 2.0);[m
[32m+[m				[32ms = Math.pow((b+c), 2.0);[m
[32m+[m[41m				[m
[32m+[m				[32md = (r + s) / 2;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.println("O valor de R é: " +r);[m
[32m+[m				[32mSystem.out.println("O valor de S é: " +s);[m
[32m+[m				[32mSystem.out.println("O valor de D é: " +d);[m
[32m+[m[41m				[m
[32m+[m				[32mler.close();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerProgSequencial/Exer05.java b/src/ExerProgSequencial/Exer05.java[m
[1mnew file mode 100644[m
[1mindex 0000000..fb98b04[m
[1m--- /dev/null[m
[1m+++ b/src/ExerProgSequencial/Exer05.java[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32mpackage ExerProgSequencial;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer05 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32m//5. Faça um sistema que leia as 3 notas de um aluno e calcule a média final deste[m
[32m+[m		[32m//aluno. Considerar que a média é ponderada e que o peso das notas é: 2,3 e 5,[m
[32m+[m		[32m//respectivamente.[m
[32m+[m[41m				[m
[32m+[m				[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m				[m
[32m+[m				[32mdouble nota1, nota2, nota3, media;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Digite a primeira nota: ");[m
[32m+[m				[32mnota1 = ler.nextDouble();[m
[32m+[m				[32mnota1 = nota1 * 2;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Digite a segunda nota: ");[m
[32m+[m				[32mnota2 = ler.nextDouble();[m
[32m+[m				[32mnota2 = nota2 * 3;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Digite a terceira nota: ");[m
[32m+[m				[32mnota3 = ler.nextDouble();[m
[32m+[m				[32mnota3 = nota3 * 5;[m
[32m+[m[41m				[m
[32m+[m				[32mmedia = (nota1 + nota2 + nota3) / 10;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.println(nota1);[m
[32m+[m				[32mSystem.out.println(nota2);[m
[32m+[m				[32mSystem.out.println(nota3);[m
[32m+[m				[32mSystem.out.println("A media final é de: " +media);[m
[32m+[m[41m				[m
[32m+[m				[32mler.close();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerProgSequencial/Exer06.java b/src/ExerProgSequencial/Exer06.java[m
[1mnew file mode 100644[m
[1mindex 0000000..efb3c50[m
[1m--- /dev/null[m
[1m+++ b/src/ExerProgSequencial/Exer06.java[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32mpackage ExerProgSequencial;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer06 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32m//6. Construa um programa em c que, tendo como dados de entrada dois pontos[m
[32m+[m		[32m//quaisquer no plano, P(x1, y1) e P(x2, y2), escreva a distância entre eles. A fórmula[m
[32m+[m		[32m//que efetua tal cálculo é:[m
[32m+[m[41m				[m
[32m+[m				[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m				[m
[32m+[m				[32mdouble x1, x2, y1, y2, d;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Digite o valor de x1: ");[m
[32m+[m				[32mx1 = ler.nextDouble();[m
[32m+[m				[32mSystem.out.print("Digite o valor de x2: ");[m
[32m+[m				[32mx2 = ler.nextDouble();[m
[32m+[m				[32mSystem.out.print("Digite o valor de y1: ");[m
[32m+[m				[32my1 = ler.nextDouble();[m
[32m+[m				[32mSystem.out.print("Digite o valor de y2: ");[m
[32m+[m				[32my2 = ler.nextDouble();[m
[32m+[m[41m				[m
[32m+[m				[32md = Math.pow((x2-x1), 2.0) + Math.pow((y2 - y1), 2.0);[m
[32m+[m				[32md = Math.sqrt(d);[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.println("O resultado da funcao é: " +d);[m
[32m+[m[41m				[m
[32m+[m				[32mler.close();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerProgSequencial/Exer07.java b/src/ExerProgSequencial/Exer07.java[m
[1mnew file mode 100644[m
[1mindex 0000000..b9a2f4f[m
[1m--- /dev/null[m
[1m+++ b/src/ExerProgSequencial/Exer07.java[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32mpackage ExerProgSequencial;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer07 {[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32m//7. Um sistema de equações lineares do tipo:[m[41m [m
[32m+[m		[32m//, pode ser resolvido segundo mostrado abaixo :[m[41m  [m
[32m+[m		[32m//Escreva um sistema que lê os coeficientes a,b,c,d,e e f e calcula e mostra os valores de x e y.[m[41m [m
[32m+[m[41m				[m
[32m+[m				[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m				[m
[32m+[m				[32mdouble a, b, c, d, e, f, x, y;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("digite o valor de A: ");[m
[32m+[m				[32ma = ler.nextDouble();[m
[32m+[m				[32mSystem.out.print("digite o valor de B: ");[m
[32m+[m				[32mb = ler.nextDouble();[m
[32m+[m				[32mSystem.out.print("digite o valor de C: ");[m
[32m+[m				[32mc = ler.nextDouble();[m
[32m+[m				[32mSystem.out.print("digite o valor de D: ");[m
[32m+[m				[32md = ler.nextDouble();[m
[32m+[m				[32mSystem.out.print("digite o valor de E: ");[m
[32m+[m				[32me = ler.nextDouble();[m
[32m+[m				[32mSystem.out.print("digite o valor de F: ");[m
[32m+[m				[32mf = ler.nextDouble();[m
[32m+[m[41m				[m
[32m+[m				[32mx = (c*e - b*f) / (a*e - b*d);[m
[32m+[m				[32my = (a*f - c*d) / (a*e - b*d);[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.println("O valor de X é: " +x);[m
[32m+[m				[32mSystem.out.println("O valor de Y é: " +y);[m
[32m+[m
[32m+[m[41m				[m
[32m+[m				[32mler.close();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerProgSequencial/Exer08.java b/src/ExerProgSequencial/Exer08.java[m
[1mnew file mode 100644[m
[1mindex 0000000..7163456[m
[1m--- /dev/null[m
[1m+++ b/src/ExerProgSequencial/Exer08.java[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32mpackage ExerProgSequencial;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer08 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32m//8. O custo de um carro é a soma do custo de fábrica com a percentagem do distribuidor e dos[m[41m [m
[32m+[m		[32m//impostos (aplicados ao custo de fábrica)[m[41m [m
[32m+[m		[32m//Supondo que a percentagem do distribuidor seja de 28% e os impostos de 45%,[m[41m [m
[32m+[m		[32m//escrever um sistema que leia o custo de fábrica de um carro e escreva o custo ao consumidor.[m[41m [m
[32m+[m
[32m+[m[41m				[m
[32m+[m				[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m				[m
[32m+[m				[32mdouble custFabri, custConsu, imposto, distri;[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.print("Digite o valor de fabrica: ");[m
[32m+[m				[32mcustFabri = ler.nextDouble();[m
[32m+[m[41m				[m
[32m+[m				[32mdistri = custFabri * 0.28;[m
[32m+[m				[32mimposto = custFabri * 0.45;[m
[32m+[m				[32mcustConsu = imposto + custFabri + distri;[m
[32m+[m[41m				[m
[32m+[m[41m				[m
[32m+[m				[32mSystem.out.println("O custo para o consumidor é de: R$" +custConsu);[m
[32m+[m[41m				[m
[32m+[m				[32mler.close();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m

[33mcommit 0a7d1a0cd26422389334b1a3ea9f79db00deefe5[m[33m ([m[1;31morigin/main[m[33m)[m
Author: GScabuzzi <gustavo-gsg@hotmail.com>
Date:   Wed Sep 1 21:51:24 2021 -0300

    Exercicios Condicionais versao 01

[1mdiff --git a/.classpath b/.classpath[m
[1mnew file mode 100644[m
[1mindex 0000000..9f9bbb5[m
[1m--- /dev/null[m
[1m+++ b/.classpath[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<classpath>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-16">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="module" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" path="src"/>[m
[32m+[m	[32m<classpathentry kind="output" path="bin"/>[m
[32m+[m[32m</classpath>[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..ae3c172[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m/bin/[m
[1mdiff --git a/.project b/.project[m
[1mnew file mode 100644[m
[1mindex 0000000..be7fa27[m
[1m--- /dev/null[m
[1m+++ b/.project[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<projectDescription>[m
[32m+[m	[32m<name>ExerGeneration</name>[m
[32m+[m	[32m<comment></comment>[m
[32m+[m	[32m<projects>[m
[32m+[m	[32m</projects>[m
[32m+[m	[32m<buildSpec>[m
[32m+[m		[32m<buildCommand>[m
[32m+[m			[32m<name>org.eclipse.jdt.core.javabuilder</name>[m
[32m+[m			[32m<arguments>[m
[32m+[m			[32m</arguments>[m
[32m+[m		[32m</buildCommand>[m
[32m+[m	[32m</buildSpec>[m
[32m+[m	[32m<natures>[m
[32m+[m		[32m<nature>org.eclipse.jdt.core.javanature</nature>[m
[32m+[m	[32m</natures>[m
[32m+[m[32m</projectDescription>[m
[1mdiff --git a/.settings/org.eclipse.jdt.core.prefs b/.settings/org.eclipse.jdt.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..8aabe8d[m
[1m--- /dev/null[m
[1m+++ b/.settings/org.eclipse.jdt.core.prefs[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.targetPlatform=16[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve[m
[32m+[m[32morg.eclipse.jdt.core.compiler.compliance=16[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.lineNumber=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.localVariable=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.sourceFile=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.assertIdentifier=error[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enumIdentifier=error[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=warning[m
[32m+[m[32morg.eclipse.jdt.core.compiler.release=enabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.source=16[m
[1mdiff --git a/src/ExerCondicionais/Exer01.java b/src/ExerCondicionais/Exer01.java[m
[1mnew file mode 100644[m
[1mindex 0000000..84c4e12[m
[1m--- /dev/null[m
[1m+++ b/src/ExerCondicionais/Exer01.java[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32mpackage ExerCondicionais;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer01 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m[41m		[m
[32m+[m		[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m		[m
[32m+[m		[32mint num1, num2, num3, maior;[m
[32m+[m[41m		[m
[32m+[m		[32mSystem.out.print("Digite o primeiro numero: ");[m
[32m+[m		[32mnum1 = ler.nextInt();[m
[32m+[m		[32mSystem.out.print("Digite o segundo numero: ");[m
[32m+[m		[32mnum2 = ler.nextInt();[m
[32m+[m		[32mSystem.out.println("Digite o terceiro numero: ");[m
[32m+[m		[32mnum3 = ler.nextInt();[m
[32m+[m[41m		[m
[32m+[m		[32mif(num1 > num2 && num1 > num3) {[m
[32m+[m			[32mmaior= num1;[m
[32m+[m		[32m}else if(num2 > num1 && num2 > num3) {[m
[32m+[m			[32mmaior= num2;[m
[32m+[m		[32m}else {[m
[32m+[m			[32mmaior= num3;[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m		[32mSystem.out.println("O maior numero é: " +maior);[m
[32m+[m[41m		[m
[32m+[m		[32mler.close();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/ExerCondicionais/Exer02.java b/src/ExerCondicionais/Exer02.java[m
[1mnew file mode 100644[m
[1mindex 0000000..0037f04[m
[1m--- /dev/null[m
[1m+++ b/src/ExerCondicionais/Exer02.java[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32mpackage ExerCondicionais;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer02 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mScanner ler = new Scanner(System.in);[m
[32m+[m
[32m+[m		[32mint num1, num2, num3;[m
[32m+[m
[32m+[m		[32mSystem.out.print("Digite o primeiro numero: ");[m
[32m+[m		[32mnum1 = ler.nextInt();[m
[32m+[m		[32mSystem.out.print("Digite o segundo numero: ");[m
[32m+[m		[32mnum2 = ler.nextInt();[m
[32m+[m		[32mSystem.out.print("Digite o terceiro numero: ");[m
[32m+[m		[32mnum3 = ler.nextInt();[m
[32m+[m
[32m+[m		[32mif (num1 < num2 && num1 < num3) {[m
[32m+[m			[32mSystem.out.print(num1);[m
[32m+[m			[32mif (num2 < num3) {[m
[32m+[m				[32mSystem.out.println(" " + num2 + " " + num3);[m
[32m+[m			[32m} else {[m
[32m+[m				[32mSystem.out.println(" " + num3 + " " + num2);[m
[32m+[m			[32m}[m
[32m+[m		[32m} else if (num2 < num1 && num2 < num3) {[m
[32m+[m			[32mSystem.out.print(num2);[m
[32m+[m			[32mif (num1 < num3) {[m
[32m+[m				[32mSystem.out.println(" " + num1 + " " + num3);[m
[32m+[m			[32m} else {[m
[32m+[m				[32mSystem.out.println(" " + num3 + " " + num1);[m
[32m+[m			[32m}[m
[32m+[m		[32m} else if (num3 < num1 && num3 < num2) {[m
[32m+[m			[32mSystem.out.print(num3);[m
[32m+[m			[32mif (num1 < num2) {[m
[32m+[m				[32mSystem.out.println(" " + num1 + " " + num2);[m
[32m+[m			[32m} else {[m
[32m+[m				[32mSystem.out.println(" " + num2 + " " + num1);[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mler.close();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerCondicionais/Exer03.java b/src/ExerCondicionais/Exer03.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d67d8db[m
[1m--- /dev/null[m
[1m+++ b/src/ExerCondicionais/Exer03.java[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32mpackage ExerCondicionais;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer03 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m[41m		[m
[32m+[m[32m//3- Faça um programa que receba a idade de uma pessoa e mostre na saída em qual[m
[32m+[m[32m//categoria ela se encontra:[m
[32m+[m[32m//10-14 infantil[m
[32m+[m[32m//15-17 juvenil[m
[32m+[m[32m//18-25 adulto[m
[32m+[m[41m		[m
[32m+[m		[32mScanner ler = new Scanner(System.in);[m
[32m+[m[41m		[m
[32m+[m		[32mint idade;[m
[32m+[m[41m		[m
[32m+[m		[32mSystem.out.println("Digite sua idade: ");[m
[32m+[m		[32midade = ler.nextInt();[m
[32m+[m[41m		[m
[32m+[m		[32mif(idade >= 0 && idade < 10) {[m
[32m+[m			[32mSystem.out.println("Voce nao tem idade suficiente!");[m
[32m+[m		[32m}else if(idade >= 10 && idade <= 14) {[m
[32m+[m			[32mSystem.out.println("Voce é da categoria Infantil!");[m
[32m+[m		[32m}else if(idade >= 15 && idade <= 17) {[m
[32m+[m			[32mSystem.out.println("Voce é da categoria Juvenil!");[m
[32m+[m		[32m}else if(idade >= 18 && idade <= 25) {[m
[32m+[m			[32mSystem.out.println("voce é da categoria Adulto!");[m
[32m+[m		[32m}else if(idade < 0) {[m
[32m+[m			[32mSystem.out.println("Idade inválida!");[m
[32m+[m		[32m}else {[m
[32m+[m			[32mSystem.out.println("Sua idade é muito avançada!");[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/ExerCondicionais/Exer04.java b/src/ExerCondicionais/Exer04.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3f7db09[m
[1m--- /dev/null[m
[1m+++ b/src/ExerCondicionais/Exer04.java[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mpackage ExerCondicionais;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32mpublic class Exer04 {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m[41m	[m
[32m+[m[32m//4- Faça um programa em que permita a entrada de um número qualquer e exiba se este[m
[32m+[m[32m//número é par ou ímpar. Se for par exiba também a raiz quadrada do mesmo; se for[m
[32m+[m[32m//ímpar exiba o número elevado ao quadrado.[m
[32m+[m[41m		[m
[32m+[m		[32mScanner ler = new Scanner (System.in);[m
[32m+[m[41m		[m
[32m+[m		[32mdouble num;[m
[32m+[m[41m		[m
[32m+[m		[32mSystem.out.print("Digite o numero: ");[m
[32m+[m		[32mnum = ler.nextDouble();[m
[32m+[m[41m		[m
[32m+[m		[32mif(num % 2 == 0) {[m
[32m+[m			[32mSystem.out.println("Esse numero é par!");[m
[32m+[m			[32mSystem.out.println("A sua raiz quadrada é: " + Math.sqrt(num));[m
[32m+[m		[32m}else {[m
[32m+[m			[32mSystem.out.println("Esse numero é impar!");[m
[32m+[m			[32mSystem.out.println("O seu quadrado é: " + Math.pow(num, 2.0));[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/module-info.java b/src/module-info.java[m
[1mnew file mode 100644[m
[1mindex 0000000..a24dd43[m
[1m--- /dev/null[m
[1m+++ b/src/module-info.java[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mmodule ExerGeneration {[m
[32m+[m[32m}[m
\ No newline at end of file[m
